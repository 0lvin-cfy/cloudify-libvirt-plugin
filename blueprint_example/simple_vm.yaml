tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.1/types.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.4/plugin.yaml
  - plugin.yaml

node_templates:

  common_network:
    type: cloudify.libvirt.network
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            params:
              dev: virbr1
              forwards:
                - mode: nat
              ips:
                - address: 192.168.142.1
                  netmask: 255.255.255.0
                  dhcp:
                    start: 192.168.142.2
                    end: 192.168.142.254

  vm_download:
    type: cloudify.nodes.ApplicationServer
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/download_vm.sh
          executor: central_deployment_agent

  disk_clone:
    type: cloudify.nodes.ApplicationServer
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/copy_disk.sh
          executor: central_deployment_agent
          inputs:
            DISK: { get_attribute: [vm_download, vm_image] }
        delete:
          implementation: scripts/remove_disk.sh
          executor: central_deployment_agent
    relationships:
    - target: vm_download
      type: cloudify.relationships.depends_on

  qemu_vm:
    type: cloudify.libvirt.domain
    properties:
      agent_config:
        install_method: none
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            params:
              memmory_size: 131072
              networks:
                - network: { get_attribute: [common_network, resource_id] }
                  mac: "52:54:00:23:fe:37"
                  dev: vnet0
                  name: net0
                  type: rtl8139
                  address:
                    function: "0x0"
                    type: pci
                    domain: "0x0000"
                    slot: "0x03"
                    bus: "0x00"
              disks:
                - dev: hda
                  bus: ide
                  file: { get_attribute: [disk_clone, vm_image] }
                  type: qcow2
                  name: "ide-0-0-0-0"
                  address:
                    target: 0
                    unit: 0
                    bus: 0
                    controller: 0
    relationships:
      - target: common_network
        type: cloudify.libvirt.relationships.connected_to
      - target: disk_clone
        type: cloudify.relationships.contained_in

  example_node:
    type: cloudify.nodes.WebServer
    interfaces:
      cloudify.interfaces.lifecycle:
          start:
            implementation: fabric.fabric_plugin.tasks.run_commands
            inputs:
              fabric_env:
                user: user
                password: user
                host_string: { get_attribute: [qemu_vm, ip] }
              commands:
                - hostname
                - df
                - uname -a
    relationships:
      - target: qemu_vm
        type: cloudify.relationships.contained_in
