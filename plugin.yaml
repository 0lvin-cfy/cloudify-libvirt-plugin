plugins:
  libvirt:
    executor: central_deployment_agent
    package_name: cloudify-libvirt-plugin
    package_version: '0.4'
    source: https://github.com/cloudify-incubator/cloudify-libvirt-plugin/archive/0.4.zip

node_types:

  cloudify.libvirt.domain:
    derived_from: cloudify.nodes.Compute
    properties:
      libvirt_auth:
        default: 'qemu:///system'
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: libvirt.cloudify_libvirt.domain_tasks.create
          inputs: {}
        configure:
          implementation: libvirt.cloudify_libvirt.domain_tasks.configure
          inputs: {}
        start:
          implementation: libvirt.cloudify_libvirt.domain_tasks.start
          inputs: {}
        stop:
          implementation: libvirt.cloudify_libvirt.domain_tasks.stop
          inputs: {}
        delete:
          implementation: libvirt.cloudify_libvirt.domain_tasks.delete
          inputs: {}
      # suspend/resume
      cloudify.interfaces.freeze:
        suspend:
          implementation: libvirt.cloudify_libvirt.domain_tasks.suspend
          inputs: {}
        resume:
          implementation: libvirt.cloudify_libvirt.domain_tasks.resume
          inputs: {}
      # backups related section
      cloudify.interfaces.snapshot:
        create:
          implementation: libvirt.cloudify_libvirt.domain_tasks.snapshot_create
          inputs: {}
        apply:
          implementation: libvirt.cloudify_libvirt.domain_tasks.snapshot_apply
          inputs: {}
        delete:
          implementation: libvirt.cloudify_libvirt.domain_tasks.snapshot_delete
          inputs: {}
      # usage
      cloudify.interfaces.statistics:
        perfomance:
          implementation: libvirt.cloudify_libvirt.domain_tasks.perfomance
          inputs: {}

  cloudify.libvirt.network:
    derived_from: cloudify.nodes.Network
    properties:
      libvirt_auth:
        default: 'qemu:///system'
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: libvirt.cloudify_libvirt.network_tasks.create
          inputs: {}
        delete:
          implementation: libvirt.cloudify_libvirt.network_tasks.delete
          inputs: {}

relationships:

  cloudify.libvirt.relationships.connected_to:
    derived_from: cloudify.relationships.connected_to
    target_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish:
          implementation: libvirt.cloudify_libvirt.network_tasks.link
          inputs: {}
        unlink:
          implementation: libvirt.cloudify_libvirt.network_tasks.unlink
          inputs: {}
