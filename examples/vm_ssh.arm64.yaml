tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.4/types.yaml
  - https://raw.githubusercontent.com/cloudify-incubator/cloudify-utilities-plugin/1.9.5/plugin.yaml
  - https://raw.githubusercontent.com/cloudify-incubator/cloudify-libvirt-plugin/0.6.0/plugin.yaml

inputs:

  agent_password:
    default: passw0rd

node_templates:

  common_network:
    type: cloudify.libvirt.network
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            params:
              dev: virbr1
              forwards:
                - mode: nat
              ips:
                - address: 192.168.142.1
                  netmask: 255.255.255.0
                  dhcp:
                    start: 192.168.142.2
                    end: 192.168.142.254

  vm_download:
    type: cloudify.nodes.ApplicationServer
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/download_vm.sh
          executor: central_deployment_agent
          inputs:
            CATALOG_URL: https://cloud-images.ubuntu.com/trusty/current
            DISK: trusty-server-cloudimg-arm64-uefi1.img

  cloud_init:
    type: cloudify.nodes.CloudInit.CloudConfig
    properties:
      resource_config:
        password: passw0rd
        chpasswd:
           expire: False
        ssh_pwauth: True

  disk_clone:
    type: cloudify.nodes.ApplicationServer
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/disk_prepere.py
          executor: central_deployment_agent
          inputs:
            disk_image: { get_attribute: [vm_download, vm_image] }
            cloud_init: { get_attribute: [cloud_init, cloud_config ] }
        configure:
          implementation: scripts/copy_disk.py
          executor: central_deployment_agent
        start:
          implementation: scripts/copy_disk_arm.sh
          executor: central_deployment_agent
        stop:
          implementation: scripts/remove_disk_arm.sh
          executor: central_deployment_agent
        delete:
          implementation: scripts/remove_disk.sh
          executor: central_deployment_agent
    relationships:
    - target: cloud_init
      type: cloudify.relationships.depends_on
    - target: vm_download
      type: cloudify.relationships.depends_on

  qemu_vm:
    type: cloudify.libvirt.domain
    properties:
      agent_config:
        install_method: none
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            params:
              memory_size: 524288
              nvram: { get_attribute: [disk_clone, bios_flash] }
              disks:
                - bus: scsi
                  dev: sda
                  file: { get_attribute: [disk_clone, vm_image] }
                  type: qcow2
                - bus: scsi
                  dev: sdb
                  file: { get_attribute: [disk_clone, vm_cloudinit] }
                  type: qcow2
              networks:
                - network: { get_attribute: [common_network, resource_id] }
                  dev: macvtap0
                  mac: 52:54:00:c0:67:81
        configure:
          inputs:
            template_resource: templates/domain-arm.xml
    relationships:
      - target: common_network
        type: cloudify.libvirt.relationships.connected_to
      - target: disk_clone
        type: cloudify.relationships.contained_in

  example_node:
    type: cloudify.nodes.WebServer
    interfaces:
      cloudify.interfaces.lifecycle:
          start:
            implementation: terminal.cloudify_terminal.tasks.run
            inputs:
              terminal_auth:
                user: ubuntu
                password: { get_input: agent_password }
                ip: { get_attribute: [qemu_vm, ip] }
              calls:
              - action: uname -a
    relationships:
      - target: qemu_vm
        type: cloudify.relationships.contained_in
